# Generated by Django 4.2.7 on 2025-09-07 11:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.country_code
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Required. 3-128 characters. Letters, digits, spaces, and ./- only.",
                        max_length=128,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=0,
                                message="Enter a valid team name.",
                                regex="^[\\w\\s.-]{3,128}$",
                            )
                        ],
                        verbose_name="team name",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Password required to join the team. Leave blank for invite-only teams.",
                        max_length=128,
                        null=True,
                        verbose_name="team password",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="URL-friendly identifier. Auto-generated if not provided.",
                        max_length=150,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                flags=0,
                                message="Enter a valid slug.",
                                regex="^[a-zA-Z0-9-_]+$",
                            )
                        ],
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Team description or bio",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Team logo or avatar (legacy)",
                        null=True,
                        upload_to="team_logos/",
                        verbose_name="logo",
                    ),
                ),
                (
                    "preferred_avatar_theme",
                    models.CharField(
                        blank=True,
                        help_text="Team's preferred avatar theme category",
                        max_length=50,
                        null=True,
                        verbose_name="preferred avatar theme",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Team website or blog",
                        null=True,
                        validators=[django.core.validators.URLValidator()],
                        verbose_name="website",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        default="IN",
                        help_text="Country code (ISO 3166-1 alpha-2)",
                        max_length=2,
                        null=True,
                        validators=[utils.country_code.validate_country_code],
                        verbose_name="country",
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True,
                        help_text="School, company, or organization",
                        max_length=128,
                        null=True,
                        verbose_name="affiliation",
                    ),
                ),
                (
                    "discord_server",
                    models.CharField(
                        blank=True,
                        help_text="Discord server invite code",
                        max_length=100,
                        null=True,
                        verbose_name="discord server",
                    ),
                ),
                (
                    "github_organization",
                    models.CharField(
                        blank=True,
                        help_text="GitHub organization name",
                        max_length=39,
                        null=True,
                        verbose_name="github organization",
                    ),
                ),
                (
                    "invite_code",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Code for users to join the team",
                        unique=True,
                        verbose_name="invite code",
                    ),
                ),
                (
                    "max_members",
                    models.IntegerField(
                        default=5,
                        help_text="Maximum number of members allowed",
                        verbose_name="maximum members",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        default=0, help_text="Total team score", verbose_name="score"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("disabled", "Disabled"),
                            ("banned", "Banned"),
                            ("pending", "Pending Approval"),
                        ],
                        default="active",
                        help_text="Team status",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Hide team from public listings",
                        verbose_name="hidden",
                    ),
                ),
                (
                    "locked",
                    models.BooleanField(
                        default=False,
                        help_text="Prevent changes to team membership",
                        verbose_name="locked",
                    ),
                ),
                (
                    "eligible",
                    models.BooleanField(
                        default=True,
                        help_text="Eligible for prizes and official rankings",
                        verbose_name="eligible",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the team was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Last time any team member was active",
                        verbose_name="last active",
                    ),
                ),
            ],
            options={
                "verbose_name": "team",
                "verbose_name_plural": "teams",
                "ordering": ["-score", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamChallengeSolve",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "flag",
                    models.TextField(
                        help_text="The flag that was submitted", verbose_name="flag"
                    ),
                ),
                (
                    "points",
                    models.IntegerField(
                        default=0,
                        help_text="Points awarded for the solve",
                        verbose_name="points",
                    ),
                ),
                (
                    "first_blood",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this was the first solve for this challenge",
                        verbose_name="first blood",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the challenge was solved",
                        verbose_name="timestamp",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which the solve was submitted",
                        null=True,
                        verbose_name="IP address",
                    ),
                ),
            ],
            options={
                "verbose_name": "team challenge solve",
                "verbose_name_plural": "team challenge solves",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TeamInvite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the invitation was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        help_text="When the invitation expires",
                        verbose_name="expires at",
                    ),
                ),
                (
                    "accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the invitation was accepted",
                        verbose_name="accepted",
                    ),
                ),
                (
                    "rejected",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the invitation was rejected",
                        verbose_name="rejected",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        help_text="Optional message to the invitee",
                        null=True,
                        verbose_name="message",
                    ),
                ),
            ],
            options={
                "verbose_name": "team invite",
                "verbose_name_plural": "team invites",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamJoinRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        help_text="Optional message to team captain",
                        null=True,
                        verbose_name="message",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the request was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        help_text="Current status of the request",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
            ],
            options={
                "verbose_name": "team join request",
                "verbose_name_plural": "team join requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamMembershipLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("join", "Joined team"),
                            ("leave", "Left team"),
                            ("kick", "Kicked from team"),
                            ("join_via_invite", "Joined via invitation"),
                            ("join_via_code", "Joined via invite code"),
                            ("join_via_password", "Joined via password"),
                            ("captain_change", "Captain changed"),
                            ("team_disbanded", "Team disbanded"),
                            ("request_approved", "Join request approved"),
                            ("request_rejected", "Join request rejected"),
                        ],
                        help_text="Action performed",
                        max_length=20,
                        verbose_name="action",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the action occurred",
                        verbose_name="timestamp",
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True,
                        help_text="Additional information about the action",
                        null=True,
                        verbose_name="note",
                    ),
                ),
            ],
            options={
                "verbose_name": "team membership log",
                "verbose_name_plural": "team membership logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TeamSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "auto_accept_members",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically accept join requests",
                        verbose_name="auto-accept members",
                    ),
                ),
                (
                    "require_captain_approval",
                    models.BooleanField(
                        default=True,
                        help_text="Require captain approval for new members",
                        verbose_name="require captain approval",
                    ),
                ),
                (
                    "allow_member_invites",
                    models.BooleanField(
                        default=False,
                        help_text="Allow regular members to invite new members",
                        verbose_name="allow member invites",
                    ),
                ),
                (
                    "share_solves_with_members",
                    models.BooleanField(
                        default=True,
                        help_text="Share challenge solutions with all team members",
                        verbose_name="share solves with members",
                    ),
                ),
                (
                    "leaderboard_visibility",
                    models.BooleanField(
                        default=True,
                        help_text="Show team on public leaderboards",
                        verbose_name="leaderboard visibility",
                    ),
                ),
                (
                    "max_members",
                    models.IntegerField(
                        default=5,
                        help_text="Maximum number of members allowed in the team",
                        verbose_name="maximum members",
                    ),
                ),
                (
                    "team",
                    models.OneToOneField(
                        help_text="Team these settings belong to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_settings",
                        to="teams.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "team settings",
                "verbose_name_plural": "team settings",
            },
        ),
    ]

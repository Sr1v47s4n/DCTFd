# Generated by Django 4.2.7 on 2025-09-07 11:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("register", "Register"),
                            ("profile_update", "Profile Update"),
                            ("password_change", "Password Change"),
                            ("password_reset", "Password Reset"),
                            ("team_create", "Team Create"),
                            ("team_join", "Team Join"),
                            ("team_leave", "Team Leave"),
                            ("challenge_view", "Challenge View"),
                            ("challenge_solve", "Challenge Solve"),
                            ("flag_submit", "Flag Submit"),
                            ("hint_unlock", "Hint Unlock"),
                            ("event_register", "Event Register"),
                            ("file_download", "File Download"),
                            ("other", "Other"),
                        ],
                        help_text="Type of activity",
                        max_length=20,
                        verbose_name="activity type",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which the activity was performed",
                        null=True,
                        verbose_name="IP address",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent from which the activity was performed",
                        null=True,
                        verbose_name="user agent",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata about the activity",
                        null=True,
                        verbose_name="metadata",
                    ),
                ),
            ],
            options={
                "verbose_name": "activity log",
                "verbose_name_plural": "activity logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="The announcement message", verbose_name="content"
                    ),
                ),
                (
                    "is_important",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this announcement should be highlighted as important",
                        verbose_name="is important",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this announcement is currently active",
                        verbose_name="active",
                    ),
                ),
            ],
            options={
                "verbose_name": "announcement",
                "verbose_name_plural": "announcements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("read", "Read"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("register", "Register"),
                            ("reset_password", "Reset Password"),
                            ("admin", "Admin Action"),
                            ("error", "Error"),
                            ("security", "Security Event"),
                        ],
                        help_text="Type of action performed",
                        max_length=20,
                        verbose_name="action",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the model affected",
                        max_length=100,
                        null=True,
                        verbose_name="model name",
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of the object affected",
                        max_length=100,
                        null=True,
                        verbose_name="object ID",
                    ),
                ),
                (
                    "object_repr",
                    models.CharField(
                        blank=True,
                        help_text="String representation of the object",
                        max_length=200,
                        null=True,
                        verbose_name="object representation",
                    ),
                ),
                (
                    "changes",
                    models.JSONField(
                        blank=True,
                        help_text="Changes made to the object",
                        null=True,
                        verbose_name="changes",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which the action was performed",
                        null=True,
                        verbose_name="IP address",
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent from which the action was performed",
                        null=True,
                        verbose_name="user agent",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        default="success",
                        help_text="Status of the action",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        help_text="Additional information about the action",
                        null=True,
                        verbose_name="message",
                    ),
                ),
            ],
            options={
                "verbose_name": "audit log",
                "verbose_name_plural": "audit logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the badge",
                        max_length=100,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the badge and how to earn it",
                        verbose_name="description",
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        help_text="Badge icon image",
                        upload_to="badges/",
                        verbose_name="icon",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the badge is currently active",
                        verbose_name="is active",
                    ),
                ),
                (
                    "required_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Score required to earn this badge (if applicable)",
                        null=True,
                        verbose_name="required score",
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the badge is hidden until earned",
                        verbose_name="hidden",
                    ),
                ),
            ],
            options={
                "verbose_name": "badge",
                "verbose_name_plural": "badges",
            },
        ),
        migrations.CreateModel(
            name="CustomFieldDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="object id")),
                (
                    "field_for",
                    models.CharField(
                        choices=[("user", "User"), ("team", "Team")],
                        help_text="Type of form this field is for",
                        max_length=20,
                        verbose_name="field for",
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("textarea", "Text Area"),
                            ("number", "Number"),
                            ("email", "Email"),
                            ("url", "URL"),
                            ("date", "Date"),
                            ("select", "Dropdown"),
                            ("radio", "Radio Buttons"),
                            ("checkbox", "Checkboxes"),
                            ("boolean", "Yes/No Checkbox"),
                        ],
                        default="text",
                        help_text="Type of the custom field",
                        max_length=20,
                        verbose_name="field type",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Label to display to users",
                        max_length=255,
                        verbose_name="field label",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description or help text for the field",
                        verbose_name="description",
                    ),
                ),
                (
                    "placeholder",
                    models.CharField(
                        blank=True,
                        help_text="Placeholder text for text fields",
                        max_length=255,
                        verbose_name="placeholder",
                    ),
                ),
                (
                    "options",
                    models.TextField(
                        blank=True,
                        help_text="Options for select/radio/checkbox fields (one per line)",
                        verbose_name="options",
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this field is required",
                        verbose_name="required",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order in which to display the field",
                        verbose_name="display order",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "Custom Field Definition",
                "verbose_name_plural": "Custom Field Definitions",
                "ordering": ["field_for", "order"],
            },
        ),
        migrations.CreateModel(
            name="CustomFieldValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "value",
                    models.TextField(
                        blank=True,
                        help_text="Value for this custom field",
                        verbose_name="field value",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "Custom Field Value",
                "verbose_name_plural": "Custom Field Values",
            },
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the file",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="The actual file",
                        upload_to="files/%Y/%m/",
                        verbose_name="file",
                    ),
                ),
                (
                    "size",
                    models.BigIntegerField(
                        help_text="Size of the file in bytes", verbose_name="size"
                    ),
                ),
                (
                    "mimetype",
                    models.CharField(
                        help_text="MIME type of the file",
                        max_length=100,
                        verbose_name="MIME type",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the file",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the file",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the file is publicly accessible",
                        verbose_name="is public",
                    ),
                ),
                (
                    "download_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times the file has been downloaded",
                        verbose_name="download count",
                    ),
                ),
            ],
            options={
                "verbose_name": "file",
                "verbose_name_plural": "files",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GlobalSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_name",
                    models.CharField(
                        default="DCTFd",
                        help_text="Name of the CTF platform",
                        max_length=100,
                        verbose_name="site name",
                    ),
                ),
                (
                    "site_description",
                    models.TextField(
                        blank=True,
                        help_text="Brief description of the platform",
                        verbose_name="site description",
                    ),
                ),
                (
                    "platform_version",
                    models.CharField(
                        default="1.0.0",
                        help_text="Current version of the platform",
                        max_length=20,
                        verbose_name="platform version",
                    ),
                ),
                (
                    "platform_logo",
                    models.ImageField(
                        blank=True,
                        help_text="Logo for the platform",
                        null=True,
                        upload_to="platform_assets/",
                        verbose_name="platform logo",
                    ),
                ),
                (
                    "platform_favicon",
                    models.ImageField(
                        blank=True,
                        help_text="Favicon for the platform",
                        null=True,
                        upload_to="platform_assets/",
                        verbose_name="platform favicon",
                    ),
                ),
                (
                    "default_theme",
                    models.CharField(
                        default="default",
                        help_text="Default theme for the platform",
                        max_length=50,
                        verbose_name="default theme",
                    ),
                ),
                (
                    "custom_css",
                    models.TextField(
                        blank=True,
                        help_text="Custom CSS for the entire platform",
                        verbose_name="custom CSS",
                    ),
                ),
                (
                    "custom_js",
                    models.TextField(
                        blank=True,
                        help_text="Custom JavaScript for the entire platform",
                        verbose_name="custom JavaScript",
                    ),
                ),
                (
                    "email_from",
                    models.EmailField(
                        blank=True,
                        help_text="Email address to send from",
                        max_length=254,
                        verbose_name="email from",
                    ),
                ),
                (
                    "email_contact",
                    models.EmailField(
                        blank=True,
                        help_text="Email address for contact inquiries",
                        max_length=254,
                        verbose_name="contact email",
                    ),
                ),
                (
                    "allow_registration",
                    models.BooleanField(
                        default=True,
                        help_text="Whether new users can register",
                        verbose_name="allow registration",
                    ),
                ),
                (
                    "allow_team_creation",
                    models.BooleanField(
                        default=True,
                        help_text="Whether users can create teams",
                        verbose_name="allow team creation",
                    ),
                ),
                (
                    "allow_password_reset",
                    models.BooleanField(
                        default=True,
                        help_text="Whether users can reset passwords",
                        verbose_name="allow password reset",
                    ),
                ),
                (
                    "default_max_team_size",
                    models.IntegerField(
                        default=4,
                        help_text="Default maximum team size for events",
                        verbose_name="default maximum team size",
                    ),
                ),
                (
                    "default_user_role",
                    models.CharField(
                        default="user",
                        help_text="Default role for new users",
                        max_length=50,
                        verbose_name="default user role",
                    ),
                ),
                (
                    "require_email_verification",
                    models.BooleanField(
                        default=True,
                        help_text="Whether email verification is required",
                        verbose_name="require email verification",
                    ),
                ),
                (
                    "enable_rate_limiting",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to enable rate limiting",
                        verbose_name="enable rate limiting",
                    ),
                ),
                (
                    "max_login_attempts",
                    models.IntegerField(
                        default=5,
                        help_text="Maximum failed login attempts before lockout",
                        verbose_name="maximum login attempts",
                    ),
                ),
                (
                    "lockout_time",
                    models.IntegerField(
                        default=15,
                        help_text="Minutes to lock account after too many failed attempts",
                        verbose_name="lockout time",
                    ),
                ),
                (
                    "password_complexity_required",
                    models.BooleanField(
                        default=True,
                        help_text="Whether complex passwords are required",
                        verbose_name="password complexity required",
                    ),
                ),
                (
                    "maintenance_mode",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the site is in maintenance mode",
                        verbose_name="maintenance mode",
                    ),
                ),
                (
                    "maintenance_message",
                    models.TextField(
                        default="We are currently performing maintenance. Please check back later.",
                        help_text="Message to display during maintenance",
                        verbose_name="maintenance message",
                    ),
                ),
                (
                    "enable_analytics",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to enable analytics tracking",
                        verbose_name="enable analytics",
                    ),
                ),
                (
                    "analytics_code",
                    models.TextField(
                        blank=True,
                        help_text="Analytics tracking code",
                        verbose_name="analytics code",
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When settings were last updated",
                        verbose_name="last updated",
                    ),
                ),
            ],
            options={
                "verbose_name": "global settings",
                "verbose_name_plural": "global settings",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the notification",
                        max_length=100,
                        verbose_name="title",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Content of the notification", verbose_name="message"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("system", "System"),
                            ("event", "Event"),
                            ("team", "Team"),
                            ("challenge", "Challenge"),
                            ("achievement", "Achievement"),
                            ("message", "Message"),
                            ("announcement", "Announcement"),
                        ],
                        default="system",
                        help_text="Type of notification",
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the notification has been read",
                        verbose_name="is read",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the notification was read",
                        null=True,
                        verbose_name="read at",
                    ),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="Optional link to direct user to",
                        null=True,
                        verbose_name="link",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata for the notification",
                        null=True,
                        verbose_name="metadata",
                    ),
                ),
            ],
            options={
                "verbose_name": "notification",
                "verbose_name_plural": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Page title", max_length=100, verbose_name="title"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly name for the page",
                        max_length=120,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Page content (supports Markdown)",
                        verbose_name="content",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the page is visible",
                        verbose_name="is published",
                    ),
                ),
                (
                    "auth_required",
                    models.BooleanField(
                        default=False,
                        help_text="Whether authentication is required to view",
                        verbose_name="authentication required",
                    ),
                ),
                (
                    "show_in_footer",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to show in the footer navigation",
                        verbose_name="show in footer",
                    ),
                ),
                (
                    "show_in_header",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to show in the header navigation",
                        verbose_name="show in header",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Order in navigation", verbose_name="order"
                    ),
                ),
            ],
            options={
                "verbose_name": "page",
                "verbose_name_plural": "pages",
                "ordering": ["order", "title"],
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this record was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "awarded_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When the badge was awarded",
                        verbose_name="awarded at",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True,
                        help_text="Reason the badge was awarded",
                        null=True,
                        verbose_name="reason",
                    ),
                ),
                (
                    "badge",
                    models.ForeignKey(
                        help_text="Badge that was earned",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="awarded_to",
                        to="core.badge",
                    ),
                ),
            ],
            options={
                "verbose_name": "user badge",
                "verbose_name_plural": "user badges",
                "ordering": ["-awarded_at"],
            },
        ),
    ]

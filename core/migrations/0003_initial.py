# Generated by Django 4.2.7 on 2025-09-07 11:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("event", "0003_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("challenges", "0003_initial"),
        ("core", "0002_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("teams", "0002_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="userbadge",
            name="user",
            field=models.ForeignKey(
                help_text="User who earned the badge",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="badges",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="challenge",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated challenge (if any)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="challenges.challenge",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="event",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated event (if any)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="event.event",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="team",
            field=models.ForeignKey(
                blank=True,
                help_text="Associated team (if any)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="teams.team",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                help_text="User who received this notification",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="challenge",
            field=models.ForeignKey(
                blank=True,
                help_text="Challenge this file belongs to (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="core_files",
                to="challenges.challenge",
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="event",
            field=models.ForeignKey(
                blank=True,
                help_text="Event this file belongs to (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="files",
                to="event.event",
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team this file belongs to (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="files",
                to="teams.team",
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who uploaded this file",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="uploaded_files",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="customfieldvalue",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="customfieldvalue",
            name="field_definition",
            field=models.ForeignKey(
                help_text="The custom field this value is for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="core.customfielddefinition",
            ),
        ),
        migrations.AddField(
            model_name="customfielddefinition",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_field_definitions",
                to="contenttypes.contenttype",
                verbose_name="content type",
            ),
        ),
        migrations.AddField(
            model_name="badge",
            name="event",
            field=models.ForeignKey(
                blank=True,
                help_text="Event this badge is associated with (if any)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="badges",
                to="event.event",
            ),
        ),
        migrations.AddField(
            model_name="badge",
            name="required_challenges",
            field=models.ManyToManyField(
                blank=True,
                help_text="Challenges that must be completed to earn this badge",
                related_name="required_for_badges",
                to="challenges.challenge",
            ),
        ),
        migrations.AddField(
            model_name="auditlog",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who performed the action",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="audit_logs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="challenge",
            field=models.ForeignKey(
                blank=True,
                help_text="Challenge associated with this activity (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activity_logs",
                to="challenges.challenge",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="event",
            field=models.ForeignKey(
                blank=True,
                help_text="Event associated with this activity (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activity_logs",
                to="event.event",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team associated with this activity (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="activity_logs",
                to="teams.team",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="user",
            field=models.ForeignKey(
                help_text="User who performed the activity",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activity_logs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userbadge",
            unique_together={("user", "badge", "event")},
        ),
        migrations.AlterUniqueTogether(
            name="customfieldvalue",
            unique_together={("field_definition", "content_type", "object_id")},
        ),
    ]

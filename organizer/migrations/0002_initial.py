# Generated by Django 4.2.7 on 2025-09-07 11:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("organizer", "0001_initial"),
        ("teams", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="organizertaskassignment",
            name="assigned_by",
            field=models.ForeignKey(
                help_text="User who assigned this task",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_tasks",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="organizertaskassignment",
            name="assigned_to",
            field=models.ForeignKey(
                help_text="Organizer assigned to this task",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assigned_tasks",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="organizertaskassignment",
            name="event",
            field=models.ForeignKey(
                help_text="Event this task is for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organizer_tasks",
                to="organizer.event",
            ),
        ),
        migrations.AddField(
            model_name="eventsettings",
            name="event",
            field=models.OneToOneField(
                help_text="Event these settings belong to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="settings",
                to="organizer.event",
            ),
        ),
        migrations.AddField(
            model_name="eventregistration",
            name="event",
            field=models.ForeignKey(
                help_text="Event being registered for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="registrations",
                to="organizer.event",
            ),
        ),
        migrations.AddField(
            model_name="eventregistration",
            name="team",
            field=models.ForeignKey(
                blank=True,
                help_text="Team registering for the event (if applicable)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="organizer_event_registrations",
                to="teams.team",
            ),
        ),
        migrations.AddField(
            model_name="eventregistration",
            name="user",
            field=models.ForeignKey(
                help_text="User registering for the event",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organizer_event_registrations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventannouncement",
            name="author",
            field=models.ForeignKey(
                help_text="User who created the announcement",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="authored_event_announcements",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="eventannouncement",
            name="event",
            field=models.ForeignKey(
                help_text="Event this announcement is for",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="announcements",
                to="organizer.event",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="organizers",
            field=models.ManyToManyField(
                help_text="Users with organizer permissions for this event",
                limit_choices_to={"type": "organizer"},
                related_name="organizer_organized_events",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventregistration",
            unique_together={("event", "user")},
        ),
    ]
